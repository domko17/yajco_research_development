package yajco.exemple.sml.parser.beaver;

import yajco.exemple.sml.parser.beaver.SymbolListImpl;
import yajco.exemple.sml.parser.beaver.SymbolWrapper;
import beaver.*;
import java.util.ArrayList;

/**
 * This class is a LALR parser generated by
 * <a href="http://beaver.sourceforge.net">Beaver</a> v0.9.6.1
 * from the grammar specification "grammar.grammar".
 */
public class StateMachineParser extends Parser {
	static public class Terminals {
		static public final short EOF = 0;
		static public final short ID = 1;
		static public final short SYMBOL_59 = 2;
		static public final short SYMBOLTRANS = 3;
		static public final short SYMBOL_58 = 4;
		static public final short SYMBOL_45__62 = 5;
		static public final short SYMBOLSTATE = 6;
	}

	static final ParsingTables PARSING_TABLES = new ParsingTables(
		"U9oDaDiEWZ0GH4yHw0K4$MC#M$4o3Wqcn2URd6vdkvdT5hZgGKCaatIZvqHBHs5WvCm4p2O" +
		"IVDCusvDSMwnRqn4av#6oUDjWZmSTJBEVStN3JjW9zu3fMojfDLf#FFvXcy4ETxFghHVLZy" +
		"FIi$REVadoJ1l5Ud2CzGzW$013oYNK");

	private final Action[] actions;

	public StateMachineParser() {
		super(PARSING_TABLES);
		actions = new Action[] {
			new Action() {	// [0] State = SYMBOLSTATE ID.id SYMBOL_59
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_id = _symbols[offset + 2];
					final java.lang.String id = (java.lang.String) _symbol_id.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.sml.model.State(id), (Object)id));
				}
			},
			new Action() {	// [1] Declaration = State.val
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_val = _symbols[offset + 1];
					final yajco.exemple.sml.parser.beaver.SymbolWrapper<yajco.example.sml.model.State> val = (yajco.exemple.sml.parser.beaver.SymbolWrapper<yajco.example.sml.model.State>) _symbol_val.value;
					 return (Symbol) new SymbolWrapper(val.getWrappedObject());
				}
			},
			new Action() {	// [2] Declaration = Transition.val
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_val = _symbols[offset + 1];
					final yajco.exemple.sml.parser.beaver.SymbolWrapper<yajco.example.sml.model.Transition> val = (yajco.exemple.sml.parser.beaver.SymbolWrapper<yajco.example.sml.model.Transition>) _symbol_val.value;
					 return (Symbol) new SymbolWrapper(val.getWrappedObject());
				}
			},
			new Action() {	// [3] Transition = SYMBOLTRANS ID.label SYMBOL_58 ID.sourceLabel SYMBOL_45__62 ID.targetLabel SYMBOL_59
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_label = _symbols[offset + 2];
					final java.lang.String label = (java.lang.String) _symbol_label.value;
					final Symbol _symbol_sourceLabel = _symbols[offset + 4];
					final java.lang.String sourceLabel = (java.lang.String) _symbol_sourceLabel.value;
					final Symbol _symbol_targetLabel = _symbols[offset + 6];
					final java.lang.String targetLabel = (java.lang.String) _symbol_targetLabel.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.sml.model.Transition(label, sourceLabel, targetLabel), (Object)label, sourceLabel, targetLabel));
				}
			},
			new Action() {	// [4] StateMachine = DeclarationArray1.declarations
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_declarations = _symbols[offset + 1];
					final yajco.exemple.sml.parser.beaver.SymbolWrapper<yajco.exemple.sml.parser.beaver.SymbolListImpl<yajco.example.sml.model.Declaration>> declarations = (yajco.exemple.sml.parser.beaver.SymbolWrapper<yajco.exemple.sml.parser.beaver.SymbolListImpl<yajco.example.sml.model.Declaration>>) _symbol_declarations.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.sml.model.StateMachine(declarations.getWrappedObject().toArray(new yajco.example.sml.model.Declaration[]{})), (Object)declarations.getWrappedObject().toArray(new yajco.example.sml.model.Declaration[]{})));
				}
			},
			new Action() {	// [5] DeclarationArray1 = DeclarationArray1.list Declaration.elem
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_list = _symbols[offset + 1];
					final yajco.exemple.sml.parser.beaver.SymbolWrapper<yajco.exemple.sml.parser.beaver.SymbolListImpl<yajco.example.sml.model.Declaration>> list = (yajco.exemple.sml.parser.beaver.SymbolWrapper<yajco.exemple.sml.parser.beaver.SymbolListImpl<yajco.example.sml.model.Declaration>>) _symbol_list.value;
					final Symbol _symbol_elem = _symbols[offset + 2];
					final yajco.exemple.sml.parser.beaver.SymbolWrapper<yajco.example.sml.model.Declaration> elem = (yajco.exemple.sml.parser.beaver.SymbolWrapper<yajco.example.sml.model.Declaration>) _symbol_elem.value;
					 list.getWrappedObject().add(elem.getWrappedObject()); return (Symbol) new SymbolWrapper(list.getWrappedObject());
				}
			},
			new Action() {	// [6] DeclarationArray1 = 
				public Symbol reduce(Symbol[] _symbols, int offset) {
					 return (Symbol) new SymbolWrapper(new SymbolListImpl<yajco.example.sml.model.Declaration>());
				}
			}
		};
	}

	protected Symbol invokeReduceAction(int rule_num, int offset) {
		return actions[rule_num].reduce(_symbols, offset);
	}
}

package yajco.example.desk.parser.beaver;

import yajco.example.desk.parser.beaver.SymbolWrapper;
import yajco.example.desk.parser.beaver.SymbolListImpl;
import beaver.*;
import java.util.ArrayList;

/**
 * This class is a LALR parser generated by
 * <a href="http://beaver.sourceforge.net">Beaver</a> v0.9.6.1
 * from the grammar specification "grammar.grammar".
 */
public class DeskParser extends Parser {
	static public class Terminals {
		static public final short EOF = 0;
		static public final short NAME = 1;
		static public final short VALUE = 2;
		static public final short SYMBOL_40 = 3;
		static public final short SYMBOL_43 = 4;
		static public final short SYMBOL_41 = 5;
		static public final short SYMBOL_61 = 6;
		static public final short SYMBOLPRINT = 7;
		static public final short SYMBOLWHERE = 8;
		static public final short SYMBOL_44 = 9;
	}

	static final ParsingTables PARSING_TABLES = new ParsingTables(
		"U9nraEiEWZ0CXG#2YDm6ecYCHltbQ$hEAYegzGmQGxnqEVtQqcsi0FO8uMACY1mgHoqJnF3" +
		"b30#17EdR7Abo1YCdv1XWmbMmDWMGSNV4EFcYmqwN7HvloUYxF52cCFoMycQ7osSj5E5V0E" +
		"K1hIseYB9zXTRcL6pZNw9jg3MrrNn5xJvw1Y9IsPYibSs$CtLFeinwjMKlBl4sQT2T#PI7t" +
		"AMMIkktrb$aQj$0bxagXrcda3Ai6J8bxGmpJiPEBty1HYuvR0==");

	private final Action[] actions;

	public DeskParser() {
		super(PARSING_TABLES);
		actions = new Action[] {
			new Action() {	// [0] Expression = SYMBOL_40 Expression.val SYMBOL_41
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_val = _symbols[offset + 2];
					final yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Expression> val = (yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Expression>) _symbol_val.value;
					 return (Symbol) new SymbolWrapper(val.getWrappedObject());
				}
			},
			new Action() {	// [1] Expression = Expression.expression1 SYMBOL_43 Expression.expression2
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_expression1 = _symbols[offset + 1];
					final yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Expression> expression1 = (yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Expression>) _symbol_expression1.value;
					final Symbol _symbol_expression2 = _symbols[offset + 3];
					final yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Expression> expression2 = (yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Expression>) _symbol_expression2.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.desk.model.Add(expression1.getWrappedObject(), expression2.getWrappedObject()), (Object)expression1.getWrappedObject(), expression2.getWrappedObject()));
				}
			},
			new Action() {	// [2] Expression = Factor.val
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_val = _symbols[offset + 1];
					final yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Factor> val = (yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Factor>) _symbol_val.value;
					 return (Symbol) new SymbolWrapper(val.getWrappedObject());
				}
			},
			new Action() {	// [3] Factor = Number.val
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_val = _symbols[offset + 1];
					final yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Number> val = (yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Number>) _symbol_val.value;
					 return (Symbol) new SymbolWrapper(val.getWrappedObject());
				}
			},
			new Action() {	// [4] Factor = ConstUsage.val
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_val = _symbols[offset + 1];
					final yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.ConstUsage> val = (yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.ConstUsage>) _symbol_val.value;
					 return (Symbol) new SymbolWrapper(val.getWrappedObject());
				}
			},
			new Action() {	// [5] Number = VALUE.value
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_value = _symbols[offset + 1];
					final java.lang.String value = (java.lang.String) _symbol_value.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.desk.model.Number(java.lang.Integer.valueOf(value)), (Object)java.lang.Integer.valueOf(value)));
				}
			},
			new Action() {	// [6] ConstantArray1 = ConstantArray1.list SYMBOL_44 Constant.elem
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_list = _symbols[offset + 1];
					final yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.parser.beaver.SymbolListImpl<yajco.example.desk.model.Constant>> list = (yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.parser.beaver.SymbolListImpl<yajco.example.desk.model.Constant>>) _symbol_list.value;
					final Symbol _symbol_elem = _symbols[offset + 3];
					final yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Constant> elem = (yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Constant>) _symbol_elem.value;
					 list.getWrappedObject().add(elem.getWrappedObject()); return (Symbol) new SymbolWrapper(list.getWrappedObject());
				}
			},
			new Action() {	// [7] ConstantArray1 = Constant.elem
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_elem = _symbols[offset + 1];
					final yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Constant> elem = (yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Constant>) _symbol_elem.value;
					 java.util.List<yajco.example.desk.model.Constant> list = null; list = new SymbolListImpl<yajco.example.desk.model.Constant>(); list.add(elem.getWrappedObject()); return (Symbol) new SymbolWrapper(list);
				}
			},
			new Action() {	// [8] Constant = NAME.name SYMBOL_61 Number.number
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_name = _symbols[offset + 1];
					final java.lang.String name = (java.lang.String) _symbol_name.value;
					final Symbol _symbol_number = _symbols[offset + 3];
					final yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Number> number = (yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Number>) _symbol_number.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.desk.model.Constant(name, number.getWrappedObject()), (Object)name, number.getWrappedObject()));
				}
			},
			new Action() {	// [9] ConstUsage = NAME.name
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_name = _symbols[offset + 1];
					final java.lang.String name = (java.lang.String) _symbol_name.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.desk.model.ConstUsage(name), (Object)name));
				}
			},
			new Action() {	// [10] Program = SYMBOLPRINT Expression.expression
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_expression = _symbols[offset + 2];
					final yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Expression> expression = (yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Expression>) _symbol_expression.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.desk.model.Program(expression.getWrappedObject()), (Object)expression.getWrappedObject()));
				}
			},
			new Action() {	// [11] Program = SYMBOLPRINT Expression.expression SYMBOLWHERE ConstantArray1.constants
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_expression = _symbols[offset + 2];
					final yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Expression> expression = (yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.model.Expression>) _symbol_expression.value;
					final Symbol _symbol_constants = _symbols[offset + 4];
					final yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.parser.beaver.SymbolListImpl<yajco.example.desk.model.Constant>> constants = (yajco.example.desk.parser.beaver.SymbolWrapper<yajco.example.desk.parser.beaver.SymbolListImpl<yajco.example.desk.model.Constant>>) _symbol_constants.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.desk.model.Program(expression.getWrappedObject(), constants.getWrappedObject().toArray(new yajco.example.desk.model.Constant[]{})), (Object)expression.getWrappedObject(), constants.getWrappedObject().toArray(new yajco.example.desk.model.Constant[]{})));
				}
			}
		};
	}

	protected Symbol invokeReduceAction(int rule_num, int offset) {
		return actions[rule_num].reduce(_symbols, offset);
	}
}

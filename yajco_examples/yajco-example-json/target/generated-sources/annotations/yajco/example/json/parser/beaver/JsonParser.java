package yajco.example.json.parser.beaver;

import yajco.example.json.parser.beaver.SymbolWrapper;
import yajco.example.json.parser.beaver.SymbolListImpl;
import beaver.*;
import java.util.ArrayList;

/**
 * This class is a LALR parser generated by
 * <a href="http://beaver.sourceforge.net">Beaver</a> v0.9.6.1
 * from the grammar specification "grammar.grammar".
 */
public class JsonParser extends Parser {
	static public class Terminals {
		static public final short EOF = 0;
		static public final short VALUE = 1;
		static public final short ZACOBJ = 2;
		static public final short SYMBOL_44 = 3;
		static public final short ZACPOLE = 4;
		static public final short NULL = 5;
		static public final short BOOLEAN = 6;
		static public final short CISLO = 7;
		static public final short KONPOLE = 8;
		static public final short KONOBJ = 9;
		static public final short DVOJBODKA = 10;
	}

	static final ParsingTables PARSING_TABLES = new ParsingTables(
		"U9oLajbIWq0GHK$094GIOi3WlZpbIKij7$qvVzTztyNspaZYv84gxQa3VPkvFJ03S491R3S" +
		"iaxFEY34f6$GPa35aYItQbAej1hMKjK39hp7rEnNDL4B7tgnYrSwKRxB02bsWHqkpOkas7L" +
		"KIzVpjE9AxK8$vshno$cZcToeDb7iZn5XvJoCXDzCtmFOfFdR5aTYlzPuuhlD3iUFols2As" +
		"dTGtoTDSwVhor85jKcGT$#nRXLgHTQq9dNOXR####kTlTYpFTcZFTYzNTg7VRgkualSsfLT" +
		"sxczQcgf7O$4ptuEHIRSIHTwMYZlDv3xFyE1QFbp6uZKdrTC#Gqimrdx");

	private final Action[] actions;

	public JsonParser() {
		super(PARSING_TABLES);
		actions = new Action[] {
			new Action() {	// [0] Array = ZACPOLE KONPOLE
				public Symbol reduce(Symbol[] _symbols, int offset) {
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.json.model.Array()));
				}
			},
			new Action() {	// [1] Array = ZACPOLE NodeArray2.node KONPOLE
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_node = _symbols[offset + 2];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.parser.beaver.SymbolListImpl<yajco.example.json.model.Node>> node = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.parser.beaver.SymbolListImpl<yajco.example.json.model.Node>>) _symbol_node.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.json.model.Array(new java.util.ArrayList<yajco.example.json.model.Node>(node.getWrappedObject())), (Object)new java.util.ArrayList<yajco.example.json.model.Node>(node.getWrappedObject())));
				}
			},
			new Action() {	// [2] JsonFile = Object.obj
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_obj = _symbols[offset + 1];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Object> obj = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Object>) _symbol_obj.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.json.model.JsonFile(obj.getWrappedObject()), (Object)obj.getWrappedObject()));
				}
			},
			new Action() {	// [3] NodeString = VALUE.retazec
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_retazec = _symbols[offset + 1];
					final java.lang.String retazec = (java.lang.String) _symbol_retazec.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.json.model.NodeString(retazec), (Object)retazec));
				}
			},
			new Action() {	// [4] Null = NULL.nula
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_nula = _symbols[offset + 1];
					final java.lang.String nula = (java.lang.String) _symbol_nula.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.json.model.Null(nula), (Object)nula));
				}
			},
			new Action() {	// [5] MembersArray1 = MembersArray1.list SYMBOL_44 Members.elem
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_list = _symbols[offset + 1];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.parser.beaver.SymbolListImpl<yajco.example.json.model.Members>> list = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.parser.beaver.SymbolListImpl<yajco.example.json.model.Members>>) _symbol_list.value;
					final Symbol _symbol_elem = _symbols[offset + 3];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Members> elem = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Members>) _symbol_elem.value;
					 list.getWrappedObject().add(elem.getWrappedObject()); return (Symbol) new SymbolWrapper(list.getWrappedObject());
				}
			},
			new Action() {	// [6] MembersArray1 = 
				public Symbol reduce(Symbol[] _symbols, int offset) {
					 return (Symbol) new SymbolWrapper(new SymbolListImpl<yajco.example.json.model.Members>());
				}
			},
			new Action() {	// [7] MembersArray1 = Members.elem
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_elem = _symbols[offset + 1];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Members> elem = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Members>) _symbol_elem.value;
					 java.util.List<yajco.example.json.model.Members> list = null; list = new SymbolListImpl<yajco.example.json.model.Members>(); list.add(elem.getWrappedObject()); return (Symbol) new SymbolWrapper(list);
				}
			},
			new Action() {	// [8] Node = Object.val
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_val = _symbols[offset + 1];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Object> val = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Object>) _symbol_val.value;
					 return (Symbol) new SymbolWrapper(val.getWrappedObject());
				}
			},
			new Action() {	// [9] Node = Number.val
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_val = _symbols[offset + 1];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Number> val = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Number>) _symbol_val.value;
					 return (Symbol) new SymbolWrapper(val.getWrappedObject());
				}
			},
			new Action() {	// [10] Node = Null.val
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_val = _symbols[offset + 1];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Null> val = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Null>) _symbol_val.value;
					 return (Symbol) new SymbolWrapper(val.getWrappedObject());
				}
			},
			new Action() {	// [11] Node = NodeString.val
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_val = _symbols[offset + 1];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.NodeString> val = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.NodeString>) _symbol_val.value;
					 return (Symbol) new SymbolWrapper(val.getWrappedObject());
				}
			},
			new Action() {	// [12] Node = Array.val
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_val = _symbols[offset + 1];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Array> val = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Array>) _symbol_val.value;
					 return (Symbol) new SymbolWrapper(val.getWrappedObject());
				}
			},
			new Action() {	// [13] Node = Boolean.val
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_val = _symbols[offset + 1];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Boolean> val = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Boolean>) _symbol_val.value;
					 return (Symbol) new SymbolWrapper(val.getWrappedObject());
				}
			},
			new Action() {	// [14] Members = VALUE.string DVOJBODKA Node.value
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_string = _symbols[offset + 1];
					final java.lang.String string = (java.lang.String) _symbol_string.value;
					final Symbol _symbol_value = _symbols[offset + 3];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Node> value = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Node>) _symbol_value.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.json.model.Members(string, value.getWrappedObject()), (Object)string, value.getWrappedObject()));
				}
			},
			new Action() {	// [15] NodeArray2 = NodeArray2.list SYMBOL_44 Node.elem
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_list = _symbols[offset + 1];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.parser.beaver.SymbolListImpl<yajco.example.json.model.Node>> list = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.parser.beaver.SymbolListImpl<yajco.example.json.model.Node>>) _symbol_list.value;
					final Symbol _symbol_elem = _symbols[offset + 3];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Node> elem = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Node>) _symbol_elem.value;
					 list.getWrappedObject().add(elem.getWrappedObject()); return (Symbol) new SymbolWrapper(list.getWrappedObject());
				}
			},
			new Action() {	// [16] NodeArray2 = 
				public Symbol reduce(Symbol[] _symbols, int offset) {
					 return (Symbol) new SymbolWrapper(new SymbolListImpl<yajco.example.json.model.Node>());
				}
			},
			new Action() {	// [17] NodeArray2 = Node.elem
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_elem = _symbols[offset + 1];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Node> elem = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.model.Node>) _symbol_elem.value;
					 java.util.List<yajco.example.json.model.Node> list = null; list = new SymbolListImpl<yajco.example.json.model.Node>(); list.add(elem.getWrappedObject()); return (Symbol) new SymbolWrapper(list);
				}
			},
			new Action() {	// [18] Boolean = BOOLEAN.bo
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_bo = _symbols[offset + 1];
					final java.lang.String bo = (java.lang.String) _symbol_bo.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.json.model.Boolean(java.lang.Boolean.valueOf(bo)), (Object)java.lang.Boolean.valueOf(bo)));
				}
			},
			new Action() {	// [19] Number = CISLO.cislo
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_cislo = _symbols[offset + 1];
					final java.lang.String cislo = (java.lang.String) _symbol_cislo.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.json.model.Number(cislo), (Object)cislo));
				}
			},
			new Action() {	// [20] Object = ZACOBJ KONOBJ
				public Symbol reduce(Symbol[] _symbols, int offset) {
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.json.model.Object()));
				}
			},
			new Action() {	// [21] Object = ZACOBJ MembersArray1.men KONOBJ
				public Symbol reduce(Symbol[] _symbols, int offset) {
					final Symbol _symbol_men = _symbols[offset + 2];
					final yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.parser.beaver.SymbolListImpl<yajco.example.json.model.Members>> men = (yajco.example.json.parser.beaver.SymbolWrapper<yajco.example.json.parser.beaver.SymbolListImpl<yajco.example.json.model.Members>>) _symbol_men.value;
					 return (Symbol) new SymbolWrapper(yajco.ReferenceResolver.getInstance().register(new yajco.example.json.model.Object(new java.util.ArrayList<yajco.example.json.model.Members>(men.getWrappedObject())), (Object)new java.util.ArrayList<yajco.example.json.model.Members>(men.getWrappedObject())));
				}
			}
		};
	}

	protected Symbol invokeReduceAction(int rule_num, int offset) {
		return actions[rule_num].reduce(_symbols, offset);
	}
}
